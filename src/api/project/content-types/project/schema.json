{
  "kind": "collectionType",
  "collectionName": "projects",
  "info": {
    "singularName": "project",
    "pluralName": "projects",
    "displayName": "projects",
    "description": ""
  },
  "options": {
    "draftAndPublish": true
  },
  "pluginOptions": {},
  "attributes": {
    "name": {
      "type": "string"
    },
    "avatar": {
      "type": "string"
    },
    "coingecko_id": {
      "type": "string"
    },
    "ticker": {
      "type": "string"
    },
    "website_url": {
      "type": "string"
    },
    "webapp_url": {
      "type": "string"
    },
    "twitter_url": {
      "type": "string"
    },
    "token_image_url": {
      "type": "string"
    },
    "contract_url": {
      "type": "string"
    },
    "coingecko_url": {
      "type": "string"
    },
    "llama_url": {
      "type": "string"
    },
    "dune_url": {
      "type": "string"
    },
    "rekt_url": {
      "type": "string"
    },
    "whitepaper_url": {
      "type": "string"
    },
    "github_url": {
      "type": "string"
    },
    "github_id": {
      "type": "string"
    },
    "docs_url": {
      "type": "string"
    },
    "discord_url": {
      "type": "string"
    },
    "telegram_url": {
      "type": "string"
    },
    "medium_url": {
      "type": "string"
    },
    "tags": {
      "type": "relation",
      "relation": "manyToMany",
      "target": "api::tag.tag",
      "inversedBy": "projects"
    },
    "slug": {
      "type": "uid",
      "targetField": "name"
    },
    "categories": {
      "type": "relation",
      "relation": "manyToMany",
      "target": "api::category.category",
      "inversedBy": "projects"
    },
    "sections": {
      "type": "relation",
      "relation": "manyToMany",
      "target": "api::section.section",
      "inversedBy": "projects"
    },
    "chains": {
      "type": "relation",
      "relation": "manyToMany",
      "target": "api::chain.chain",
      "mappedBy": "projects"
    },
    "people": {
      "type": "relation",
      "relation": "manyToMany",
      "target": "api::person.person",
      "inversedBy": "projects"
    },
    "has_investor": {
      "type": "relation",
      "relation": "manyToMany",
      "target": "api::project.project",
      "inversedBy": "has_investment"
    },
    "has_investment": {
      "type": "relation",
      "relation": "manyToMany",
      "target": "api::project.project",
      "inversedBy": "has_investor"
    },
    "has_investor_person": {
      "type": "relation",
      "relation": "manyToMany",
      "target": "api::person.person",
      "mappedBy": "has_investment"
    },
    "skill_levels": {
      "type": "relation",
      "relation": "manyToMany",
      "target": "api::skill-level.skill-level",
      "inversedBy": "projects"
    },
    "governance_url": {
      "type": "string"
    },
    "jobs_url": {
      "type": "string"
    },
    "defisafety_id": {
      "type": "string"
    },
    "llama_id": {
      "type": "string"
    },
    "grants_url": {
      "type": "string"
    },
    "video_url": {
      "type": "string"
    },
    "podcast_url": {
      "type": "string"
    },
    "description": {
      "type": "richtext"
    },
    "discourse_url": {
      "type": "string"
    },
    "contributors_url": {
      "type": "string"
    },
    "treasury_wallets": {
      "displayName": "treasury_wallet",
      "type": "component",
      "repeatable": true,
      "component": "shared.treasury-wallet"
    },
    "has_audit": {
      "type": "relation",
      "relation": "manyToMany",
      "target": "api::audit.audit",
      "mappedBy": "audited_project"
    },
    "is_auditor": {
      "type": "relation",
      "relation": "manyToMany",
      "target": "api::audit.audit",
      "mappedBy": "audited_by"
    },
    "audits_url": {
      "type": "string"
    },
    "has_audited": {
      "type": "relation",
      "relation": "manyToMany",
      "target": "api::project.project",
      "inversedBy": "has_auditor"
    },
    "has_auditor": {
      "type": "relation",
      "relation": "manyToMany",
      "target": "api::project.project",
      "inversedBy": "has_audited"
    },
    "risk_manager_for": {
      "type": "relation",
      "relation": "manyToMany",
      "target": "api::project.project",
      "inversedBy": "risk_managed_by"
    },
    "risk_managed_by": {
      "type": "relation",
      "relation": "manyToMany",
      "target": "api::project.project",
      "inversedBy": "risk_manager_for"
    },
    "powers": {
      "type": "relation",
      "relation": "manyToMany",
      "target": "api::project.project",
      "inversedBy": "powered_by"
    },
    "powered_by": {
      "type": "relation",
      "relation": "manyToMany",
      "target": "api::project.project",
      "inversedBy": "powers"
    },
    "child_projects": {
      "type": "relation",
      "relation": "manyToMany",
      "target": "api::project.project",
      "inversedBy": "parent_projects"
    },
    "parent_projects": {
      "type": "relation",
      "relation": "manyToMany",
      "target": "api::project.project",
      "inversedBy": "child_projects"
    },
    "risk_urls": {
      "displayName": "risk_urls",
      "type": "component",
      "repeatable": true,
      "component": "project.risk-urls"
    },
    "twitter_img": {
      "type": "string"
    },
    "mirror_url": {
      "type": "string"
    },
    "twitter_banner": {
      "type": "string"
    },
    "tag": {
      "type": "relation",
      "relation": "manyToOne",
      "target": "api::tag.tag",
      "inversedBy": "ecosystem_projects"
    },
    "lores": {
      "type": "relation",
      "relation": "manyToMany",
      "target": "api::lore.lore",
      "inversedBy": "projects"
    }
  }
}
